/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoZoo.game;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Ayberk, Görkem
 */
public class MapView extends javax.swing.JPanel implements IAlgoZooView {
   // properties
   AlgoZooModel azm;
   Timer timer;
   
   // constructors
   public MapView(AlgoZooModel azm) {
      this.azm = azm;
      initComponents();
      animal.setBounds(azm.startX, azm.startY, 64, 64);
      timer = new Timer(40, new TimerListener());
      //Azm'deki Animal'ın içinden iconu alıp buradaki animal labelına setlemeliyiz.
      //Levellara göre mapBackground setlenmeli.
   }
   
   // methods
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      animal = new javax.swing.JLabel();
      mapBackground = new javax.swing.JLabel();

      setLayout(null);
      add(animal);
      animal.setBounds(0, 0, 64, 64);

      mapBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/algoZoo/Maps/Level1.png"))); // NOI18N
      add(mapBackground);
      mapBackground.setBounds(0, 0, 640, 640);
   }// </editor-fold>//GEN-END:initComponents

   @Override
   public void updateView(AlgoZooModel azm) {
      if ( animal.getX() < this.getX() && animal.getY() < this.getY()) {
         timer.start();
      }
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel animal;
   private javax.swing.JLabel mapBackground;
   // End of variables declaration//GEN-END:variables
   
   // inner class
   public class TimerListener implements ActionListener {

      @Override
      public void actionPerformed(ActionEvent e) {
         if (animal.getX() != azm.getCurrentX()) {
            if (animal.getX() < azm.getCurrentX()) {
               animal.setBounds(animal.getX() + 1, animal.getY(), 64, 64);
            }
            else {
               animal.setBounds(animal.getX() - 1, animal.getY(), 64, 64);
            }
         }
         else if (animal.getY() != azm.getCurrentY()) {
            if (animal.getY() < azm.getCurrentY()) {
               animal.setBounds(animal.getX(), animal.getY() + 1, 64, 64);
            }
            else {
               animal.setBounds(animal.getX(), animal.getY() - 1, 64, 64);
            }
         }
         else {
            timer.stop();
         }
      }
   }
}
