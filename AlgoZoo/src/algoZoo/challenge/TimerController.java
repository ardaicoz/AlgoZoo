/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoZoo.challenge;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 * This class is a countdown timer for challenge mode
 * @author Esra
 * @version 1.0
 */
public class TimerController extends javax.swing.JPanel {
   
   //properties
   private int                second;
   private int                minute;
   private Timer              timer;
   private ChallengeModeModel cmm;
   
   // constructor
   public TimerController(ChallengeModeModel cmm) {
      // initializes all the components
      this.cmm = cmm;
      initComponents();
      resetTimer();
   }

   //methods
   /**
    * resets the timer
    */
   public void resetTimer() {
      cmm.setUsedTime(0);
      second = cmm.getMinRequiredTime() % 60;
      minute = cmm.getMinRequiredTime() / 60;
      if(second > 9) 
          remainingTime.setText(minute + ":" + second);
      else
          remainingTime.setText(minute + ":0" + second);
      second--;
      if (second < 0) {
          second = 59;
          minute--;
      }
      timer = new javax.swing.Timer(1000, new TimerListener());
   }

   /**
    * stops the timer
    */
   public void stopTimer() {
      timer.stop();
   }

   /**
    * starts the timer
    */
   public void startTimer() {
      timer.start();
   }
   
   /**
    * checks if the timer is still running
    * @return true if the timer is still running, otherwise false
    */
   public boolean isRunning() {
       return timer.isRunning();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        remainingTime = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(null);

        remainingTime.setFont(new java.awt.Font("Berlin Sans FB Demi", 2, 44)); // NOI18N
        remainingTime.setForeground(new java.awt.Color(54, 44, 25));
        remainingTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remainingTime.setAlignmentY(0.0F);
        add(remainingTime);
        remainingTime.setBounds(-3, -3, 128, 50);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/algoZoo/Backgrounds/Timer_Label.png"))); // NOI18N
        add(background);
        background.setBounds(0, 0, 128, 50);
    }// </editor-fold>//GEN-END:initComponents

   //inner class
    /**
     * This class is an inner class for timer's ActionListener
     */
   public class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (cmm.isGameOver()) {
               timer.stop();
            } 
            else {
               if(second > 9) 
                   remainingTime.setText(minute + ":" + second);
               else
                   remainingTime.setText(minute + ":0" + second);
               second--;
               //if the minute is over
               if (second < 0) {
                  second = 59;
                  minute--;
               }
               // stops the timer and sets the game over if the timer is over
               if (minute < 0) {
                  timer.stop();
                  cmm.setGameOver(true); 
                  cmm.update();
               }
               cmm.increaseUsedTime();
            }
        }
       
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel remainingTime;
    // End of variables declaration//GEN-END:variables
}
