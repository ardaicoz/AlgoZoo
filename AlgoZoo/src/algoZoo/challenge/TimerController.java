/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoZoo.challenge;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author esra
 */
public class TimerController extends javax.swing.JPanel {
   //properties

   Timer timer;
   int second;
   int minute;
   ChallengeModeModel cmm;

   /**
    * Creates new form TimerController
    */
   public TimerController(ChallengeModeModel cmm) {
      this.cmm = cmm;
      initComponents();
      resetTimer();
   }

   //methods
   public void resetTimer() {
      cmm.setUsedTime(0);
      second = cmm.getMinRequiredTime() % 60;
      minute = cmm.getMinRequiredTime() / 60;
      remainingTime.setText(minute + ":" + second);
      timer = new javax.swing.Timer(1000, new TimerListener());
   }

   public void stopTimer() {
      timer.stop();
   }

   public void startTimer() {
      timer.start();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      remainingTime = new javax.swing.JLabel();
      jLabel1 = new javax.swing.JLabel();

      setOpaque(false);
      setLayout(null);

      remainingTime.setFont(new java.awt.Font("Berlin Sans FB Demi", 2, 44)); // NOI18N
      remainingTime.setForeground(new java.awt.Color(54, 44, 25));
      remainingTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      remainingTime.setAlignmentY(0.0F);
      add(remainingTime);
      remainingTime.setBounds(-3, -3, 128, 50);

      jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/algoZoo/Backgrounds/Timer_Label.png"))); // NOI18N
      add(jLabel1);
      jLabel1.setBounds(0, 0, 128, 50);
   }// </editor-fold>//GEN-END:initComponents

   //inner class
   public class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (cmm.isGameOver()) {
               timer.stop();
            } 
            else {
               remainingTime.setText(minute + ":" + second);
               second--;
               if (second < 0) {
                  second = 59;
                  minute--;
               }
               if (minute < 0) {
                  timer.stop();
                  cmm.setGameOver(true);
                  cmm.update();
               }
               cmm.increaseUsedTime();
            }
        }
       
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel remainingTime;
   // End of variables declaration//GEN-END:variables
}
